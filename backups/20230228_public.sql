--
-- PostgreSQL database dump
--

-- Dumped from database version 15.1
-- Dumped by pg_dump version 15.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: pg_database_owner
--

CREATE SCHEMA public;


ALTER SCHEMA public OWNER TO pg_database_owner;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: pg_database_owner
--

COMMENT ON SCHEMA public IS 'standard public schema';


--
-- Name: publication; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.publication AS (
	id integer,
	user_id uuid,
	description text,
	user_metadata jsonb,
	geo point,
	distance numeric,
	created_at timestamp without time zone
);


ALTER TYPE public.publication OWNER TO postgres;

--
-- Name: create_friendship(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.create_friendship(user_id uuid, friend_id uuid) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
begin
  insert into friendships ("userID", "friendID") values (create_friendship.user_id, create_friendship.friend_id);
  insert into friendships ("userID", "friendID") values (create_friendship.friend_id, create_friendship.user_id);
  return 0;
end;
$$;


ALTER FUNCTION public.create_friendship(user_id uuid, friend_id uuid) OWNER TO postgres;

--
-- Name: nearby_posts(numeric, numeric, numeric); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.nearby_posts(lng numeric, lat numeric, rad numeric) RETURNS SETOF public.publication
    LANGUAGE plpgsql
    AS $$
DECLARE
    r publication%rowtype;
BEGIN
   
    FOR r IN
      SELECT posts.id, auth.users.id as user_id, description, auth.users.raw_user_meta_data as user_metadata, geo, posts.geo<@>point(nearby_posts.lng, nearby_posts.lat) as distance, posts.created_at
      FROM posts JOIN auth.users 
      ON posts."userID" = auth.users.id
      WHERE posts.geo<@>point(nearby_posts.lng, nearby_posts.lat) < nearby_posts.rad
      ORDER BY distance
    LOOP
       RETURN NEXT r;
    END LOOP;
    RETURN;
END;
$$;


ALTER FUNCTION public.nearby_posts(lng numeric, lat numeric, rad numeric) OWNER TO postgres;

--
-- Name: remove_friendship(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.remove_friendship(user_id uuid, friend_id uuid) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
begin
  delete from friendships where "userID" = remove_friendship.user_id and "friendID" = remove_friendship.friend_id;
  delete from friendships where "friendID" = remove_friendship.user_id and "userID" = remove_friendship.friend_id;
  return 0;               
end;
$$;


ALTER FUNCTION public.remove_friendship(user_id uuid, friend_id uuid) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: friendships; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.friendships (
    id bigint NOT NULL,
    "userID" uuid NOT NULL,
    "friendID" uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now()
);


ALTER TABLE public.friendships OWNER TO postgres;

--
-- Name: friendships_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.friendships ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.friendships_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: medias; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.medias (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    type text NOT NULL,
    source text NOT NULL,
    "postID" bigint
);


ALTER TABLE public.medias OWNER TO postgres;

--
-- Name: media_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.medias ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.media_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: posts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.posts (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    "userID" uuid NOT NULL,
    description text,
    geo point
);


ALTER TABLE public.posts OWNER TO postgres;

--
-- Name: posts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.posts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.posts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: profiles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.profiles (
    id bigint NOT NULL,
    username text NOT NULL,
    biography text,
    picture text,
    created_at timestamp with time zone DEFAULT now(),
    "userID" uuid NOT NULL
);


ALTER TABLE public.profiles OWNER TO postgres;

--
-- Name: profiles_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.profiles ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.profiles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: friendships; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.friendships (id, "userID", "friendID", created_at) FROM stdin;
20	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	2954a3b1-8b72-4b76-a9a4-14548f381701	2023-02-08 10:26:58.564811+00
21	2954a3b1-8b72-4b76-a9a4-14548f381701	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	2023-02-08 10:26:58.564811+00
22	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	314decbc-a5b7-45fb-8217-0fa8b37f3139	2023-02-13 08:49:20.936856+00
23	314decbc-a5b7-45fb-8217-0fa8b37f3139	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	2023-02-13 08:49:20.936856+00
\.


--
-- Data for Name: medias; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.medias (id, created_at, type, source, "postID") FROM stdin;
55	2023-02-01 18:22:01.449508+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1675275714537.jpeg	52
56	2023-02-01 18:22:06.7306+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1675275714640.jpeg	52
57	2023-02-01 18:28:48.535188+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1675276125916.jpeg	53
58	2023-02-01 18:33:04.04341+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/2954a3b1-8b72-4b76-a9a4-14548f381701/images/1675276381170.jpeg	54
59	2023-02-01 18:33:04.044581+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/2954a3b1-8b72-4b76-a9a4-14548f381701/images/1675276381271.jpeg	54
60	2023-02-02 16:03:38.009526+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1675353751467.jpeg	55
61	2023-02-02 16:03:39.489266+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1675353751689.jpeg	55
62	2023-02-02 16:03:40.195437+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1675353751577.jpeg	55
63	2023-02-02 16:06:17.724867+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1675353956867.jpeg	56
64	2023-02-02 16:06:30.93164+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1675353956976.jpeg	56
65	2023-02-02 19:05:23.376732+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1675364721599.jpeg	57
66	2023-02-05 14:27:40.135484+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/314decbc-a5b7-45fb-8217-0fa8b37f3139/images/1675607254409.jpeg	59
67	2023-02-13 08:40:52.04343+00	image	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/medias/211f9ab1-82d6-4f79-8de4-1b3ced8081d3/images/1676277650406.jpeg	60
\.


--
-- Data for Name: posts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.posts (id, created_at, "userID", description, geo) FROM stdin;
52	2023-02-01 18:21:54.62372+00	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	first post	(10.2095525,36.713434)
54	2023-02-01 18:33:01.414035+00	2954a3b1-8b72-4b76-a9a4-14548f381701	3rd post by 2nd user	(10.5596815,35.9118987)
55	2023-02-02 16:02:32.02705+00	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	3rd post	(10.5596836,35.9118995)
56	2023-02-02 16:05:58.072831+00	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	4th post	(10.5596836,35.9118995)
57	2023-02-02 19:05:21.265349+00	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	5th post	(10.5596828,35.9118987)
53	2023-02-01 18:28:45+00	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	2nd post	(10.562417,35.913885)
59	2023-02-05 14:27:34.693039+00	314decbc-a5b7-45fb-8217-0fa8b37f3139	6th post	(10.5597029,35.9118962)
60	2023-02-13 08:40:49.965386+00	211f9ab1-82d6-4f79-8de4-1b3ced8081d3	7th post	(10.7600196,34.739822)
\.


--
-- Data for Name: profiles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.profiles (id, username, biography, picture, created_at, "userID") FROM stdin;
28	yasminebha	\N	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/avatars/yasminebhacactus.jpg	2023-02-01 18:11:07.492544+00	211f9ab1-82d6-4f79-8de4-1b3ced8081d3
29	yasmine2bha	\N	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/avatars/yasmine2bhapothos.jpg	2023-02-01 18:32:04.474109+00	2954a3b1-8b72-4b76-a9a4-14548f381701
30	ouchema	\N	https://bdrfsldnykzfwnvnwztn.supabase.co/storage/v1/object/public/avatars/ouchemaundefined	2023-02-05 12:58:43.379013+00	314decbc-a5b7-45fb-8217-0fa8b37f3139
\.


--
-- Name: friendships_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.friendships_id_seq', 35, true);


--
-- Name: media_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.media_id_seq', 67, true);


--
-- Name: posts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.posts_id_seq', 60, true);


--
-- Name: profiles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.profiles_id_seq', 30, true);


--
-- Name: friendships friendships_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.friendships
    ADD CONSTRAINT friendships_pkey PRIMARY KEY (id);


--
-- Name: friendships friendships_userID_friendID_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.friendships
    ADD CONSTRAINT "friendships_userID_friendID_key" UNIQUE ("userID", "friendID");


--
-- Name: medias media_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.medias
    ADD CONSTRAINT media_pkey PRIMARY KEY (id);


--
-- Name: posts posts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.posts
    ADD CONSTRAINT posts_pkey PRIMARY KEY (id);


--
-- Name: profiles profiles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_pkey PRIMARY KEY (id);


--
-- Name: profiles profiles_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_username_key UNIQUE (username);


--
-- Name: friendships friendships_friendID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.friendships
    ADD CONSTRAINT "friendships_friendID_fkey" FOREIGN KEY ("friendID") REFERENCES auth.users(id);


--
-- Name: friendships friendships_userID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.friendships
    ADD CONSTRAINT "friendships_userID_fkey" FOREIGN KEY ("userID") REFERENCES auth.users(id);


--
-- Name: medias medias_postID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.medias
    ADD CONSTRAINT "medias_postID_fkey" FOREIGN KEY ("postID") REFERENCES public.posts(id);


--
-- Name: posts posts_userID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.posts
    ADD CONSTRAINT "posts_userID_fkey" FOREIGN KEY ("userID") REFERENCES auth.users(id);


--
-- Name: profiles profiles_userID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT "profiles_userID_fkey" FOREIGN KEY ("userID") REFERENCES auth.users(id);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: pg_database_owner
--

GRANT USAGE ON SCHEMA public TO postgres;
GRANT USAGE ON SCHEMA public TO anon;
GRANT USAGE ON SCHEMA public TO authenticated;
GRANT USAGE ON SCHEMA public TO service_role;


--
-- Name: FUNCTION create_friendship(user_id uuid, friend_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.create_friendship(user_id uuid, friend_id uuid) TO anon;
GRANT ALL ON FUNCTION public.create_friendship(user_id uuid, friend_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.create_friendship(user_id uuid, friend_id uuid) TO service_role;


--
-- Name: FUNCTION nearby_posts(lng numeric, lat numeric, rad numeric); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.nearby_posts(lng numeric, lat numeric, rad numeric) TO anon;
GRANT ALL ON FUNCTION public.nearby_posts(lng numeric, lat numeric, rad numeric) TO authenticated;
GRANT ALL ON FUNCTION public.nearby_posts(lng numeric, lat numeric, rad numeric) TO service_role;


--
-- Name: FUNCTION remove_friendship(user_id uuid, friend_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.remove_friendship(user_id uuid, friend_id uuid) TO anon;
GRANT ALL ON FUNCTION public.remove_friendship(user_id uuid, friend_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.remove_friendship(user_id uuid, friend_id uuid) TO service_role;


--
-- Name: TABLE friendships; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.friendships TO anon;
GRANT ALL ON TABLE public.friendships TO authenticated;
GRANT ALL ON TABLE public.friendships TO service_role;


--
-- Name: SEQUENCE friendships_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.friendships_id_seq TO anon;
GRANT ALL ON SEQUENCE public.friendships_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.friendships_id_seq TO service_role;


--
-- Name: TABLE medias; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.medias TO anon;
GRANT ALL ON TABLE public.medias TO authenticated;
GRANT ALL ON TABLE public.medias TO service_role;


--
-- Name: SEQUENCE media_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.media_id_seq TO anon;
GRANT ALL ON SEQUENCE public.media_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.media_id_seq TO service_role;


--
-- Name: TABLE posts; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.posts TO anon;
GRANT ALL ON TABLE public.posts TO authenticated;
GRANT ALL ON TABLE public.posts TO service_role;


--
-- Name: SEQUENCE posts_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.posts_id_seq TO anon;
GRANT ALL ON SEQUENCE public.posts_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.posts_id_seq TO service_role;


--
-- Name: TABLE profiles; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.profiles TO anon;
GRANT ALL ON TABLE public.profiles TO authenticated;
GRANT ALL ON TABLE public.profiles TO service_role;


--
-- Name: SEQUENCE profiles_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.profiles_id_seq TO anon;
GRANT ALL ON SEQUENCE public.profiles_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.profiles_id_seq TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES  TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES  TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES  TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES  TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES  TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES  TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES  TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES  TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS  TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS  TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS  TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS  TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS  TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS  TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS  TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS  TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES  TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES  TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES  TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES  TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES  TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES  TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES  TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES  TO service_role;


--
-- PostgreSQL database dump complete
--

